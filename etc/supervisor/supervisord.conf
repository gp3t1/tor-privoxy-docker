; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Notes:
;  - Shell expansion ("~" or "$HOME") is not supported.  Environment
;    variables can be expanded using this syntax: "%(ENV_HOME)s".
;  - Comments must have a leading space: "a=b ;comment" not "a=b;comment".

[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)
;chmod=0700	                ; socket file mode (default 0700)
;chown=nobody:nogroup		 	 	; socket file uid:gid owner
;username=%()s 				      ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[supervisord]
logfile=/var/log/supervisor/supervisord.log 			; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=10MB        											; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           											; (num of main logfile rotation backups;default 10)
loglevel=info                											; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid 											; (supervisord pidfile;default supervisord.pid)
nodaemon=true                											; (start in foreground if true;default false)
minfds=1024                  											; (min. avail startup file descriptors;default 1024)
minprocs=200                 											; (min. avail process descriptors;default 200)
umask=022                   											; (process file creation umask;default 022)
identifier=supervisor       											; (supervisord identifier, default is 'supervisor')
directory=/tmp     																; (default is not to cd during start)
childlogdir=/var/log/supervisor										; ('AUTO' child log dir, default $TEMP)
;strip_ansi=false            											; (strip ansi escape codes in logs; def. false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 			; use an http:// url to specify an inet socket
;username=chris             				 	; should be same as http_username if set
;password=123               				 	; should be same as http_password if set
;prompt=mysupervisor        				 	; cmd line prompt (default "supervisor")

[program:tor]
command=tor -f /etc/tor/torrc					; the program (relative uses PATH, can take args)
numprocs=1                    				; number of processes copies to start (def 1)
directory=/home/%(ENV_TOR_USER)s 	   	; directory to cwd to before exec (def no cwd)
autostart=true                				; start at supervisord start (default: true)
startsecs=1                  					; # of secs prog must stay up to be running (def. 1)
startretries=3                				; max # of serial start failures when starting (default 3)
autorestart=true 			        				; when to restart if exited after running (def: unexpected)
;exitcodes=0,2                 				; 'expected' exit codes used with autorestart (default 0,2)
stopwaitsecs=10               				; max num secs to wait b4 SIGKILL (default 10)
user=%(ENV_TOR_USER)s 			          ; setuid to this UNIX account to run the program
redirect_stderr=false          				; redirect proc stderr to stdout (default false)
environment=HOME="/home/%(ENV_TOR_USER)s",USER="%(ENV_TOR_USER)s"
priority=700

[program:privoxy]
command=privoxy --no-daemon /etc/privoxy/config		; the program (relative uses PATH, can take args)
numprocs=1                    										; number of processes copies to start (def 1)
directory=/home/%(ENV_PRIVOXY_USER)s 							; directory to cwd to before exec (def no cwd)
autostart=true                										; start at supervisord start (default: true)
startsecs=1                  											; # of secs prog must stay up to be running (def. 1)
startretries=3                										; max # of serial start failures when starting (default 3)
autorestart=true				       										; when to restart if exited after running (def: unexpected)
;exitcodes=0,2	               										; 'expected' exit codes used with autorestart (default 0,2)
stopwaitsecs=10               										; max num secs to wait b4 SIGKILL (default 10)
user=%(ENV_PRIVOXY_USER)s 	          						; setuid to this UNIX account to run the program
redirect_stderr=false          										; redirect proc stderr to stdout (default false)
priority=800

[program:check]
command=check_connectivity			; the program (relative uses PATH, can take args)
numprocs=1                    	; number of processes copies to start (def 1)
directory=/tmp 									; directory to cwd to before exec (def no cwd)
autostart=true                	; start at supervisord start (default: true)
startsecs=10                 		; # of secs prog must stay up to be running (def. 1)
startretries=3                	; max # of serial start failures when starting (default 3)
autorestart=true				       	; when to restart if exited after running (def: unexpected)
;exitcodes=0,2	                ; 'expected' exit codes used with autorestart (default 0,2)
stopwaitsecs=1                	; max num secs to wait b4 SIGKILL (default 10)
redirect_stderr=true          	; redirect proc stderr to stdout (default false)
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
priority=900